// <auto-generated />
using System;
using EtherpunkManagementSystems.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EtherpunkManagementSystems.Migrations
{
    [DbContext(typeof(EtherpunkDbContext))]
    partial class EtherpunkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareAttachment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("AttachmentData");

                    b.Property<string>("AttachmentFileName");

                    b.Property<string>("AttachmentName");

                    b.Property<string>("AttachmentTypeId");

                    b.Property<string>("CreatedByUserId");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HardwareInventoryId");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentTypeId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("HardwareInventoryId");

                    b.ToTable("HardwareAttachments");

                    b.HasData(
                        new
                        {
                            Id = "62796146-70e7-4fb9-9760-cd85a73df182",
                            AttachmentFileName = "invoice.pdf",
                            AttachmentName = "XPS 150 Invoice",
                            AttachmentTypeId = "e3e6af98-265b-4ebc-a290-60d65d50dd00",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2018, 10, 20, 13, 11, 16, 190, DateTimeKind.Local).AddTicks(8213),
                            HardwareInventoryId = "9a378792-3a2f-4682-ac17-17c798b9681d",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareAttribute", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedByUserId");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HardwareInventoryId");

                    b.Property<string>("HardwareLayoutTemplateId");

                    b.Property<string>("Notes");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("HardwareInventoryId");

                    b.HasIndex("HardwareLayoutTemplateId");

                    b.ToTable("HardwareAttributes");

                    b.HasData(
                        new
                        {
                            Id = "c45feaea-32ea-4d5b-85a0-abc639494260",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 10, 10, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "9a378792-3a2f-4682-ac17-17c798b9681d",
                            HardwareLayoutTemplateId = "f29cf67c-9a2c-47c8-9f72-eee55e6988d4",
                            Notes = ""
                        },
                        new
                        {
                            Id = "a17667c3-9906-49bb-98c2-c1a8309a97c6",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 10, 10, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "9a378792-3a2f-4682-ac17-17c798b9681d",
                            HardwareLayoutTemplateId = "7f30a163-7aec-47da-a87f-f6183a4745e3",
                            Notes = ""
                        },
                        new
                        {
                            Id = "6cd2b1c9-fafc-4dae-a42a-a45bca940184",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 10, 10, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "9a378792-3a2f-4682-ac17-17c798b9681d",
                            HardwareLayoutTemplateId = "b943d0eb-4807-46ab-9025-f0c73147468e",
                            Notes = ""
                        },
                        new
                        {
                            Id = "5959f2d2-3430-4d31-a59a-e36c0250bfc1",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 10, 10, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "9a378792-3a2f-4682-ac17-17c798b9681d",
                            HardwareLayoutTemplateId = "851c2fbd-39c8-4a75-b401-92d61a4347b4",
                            Notes = ""
                        },
                        new
                        {
                            Id = "f1672f5d-a885-494e-a5cb-3289a0d1f79a",
                            CreatedByUserId = "e194001e-6302-4b2b-9ccf-cb1ba8cc9ea4",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 11, 13, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "9c8c0a85-4a31-4552-b8da-fd1114849829",
                            HardwareLayoutTemplateId = "f29cf67c-9a2c-47c8-9f72-eee55e6988d4",
                            Notes = ""
                        },
                        new
                        {
                            Id = "bc0f12ac-8785-4d81-97f0-71a24ab24d8e",
                            CreatedByUserId = "e194001e-6302-4b2b-9ccf-cb1ba8cc9ea4",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 11, 13, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "9c8c0a85-4a31-4552-b8da-fd1114849829",
                            HardwareLayoutTemplateId = "7f30a163-7aec-47da-a87f-f6183a4745e3",
                            Notes = ""
                        },
                        new
                        {
                            Id = "3cdcc7f3-b148-4146-88fc-181047612eb5",
                            CreatedByUserId = "e194001e-6302-4b2b-9ccf-cb1ba8cc9ea4",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 11, 13, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "9c8c0a85-4a31-4552-b8da-fd1114849829",
                            HardwareLayoutTemplateId = "b943d0eb-4807-46ab-9025-f0c73147468e",
                            Notes = ""
                        },
                        new
                        {
                            Id = "50d30d4d-c526-4a51-b405-b763dc5c2896",
                            CreatedByUserId = "e194001e-6302-4b2b-9ccf-cb1ba8cc9ea4",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 11, 13, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "9c8c0a85-4a31-4552-b8da-fd1114849829",
                            HardwareLayoutTemplateId = "851c2fbd-39c8-4a75-b401-92d61a4347b4",
                            Notes = ""
                        },
                        new
                        {
                            Id = "cf0ffc9b-d879-4909-85ac-aeeebf4ef378",
                            CreatedByUserId = "d3ebdb0c-1884-4cde-ba8e-ade906609b99",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 13, 43, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "30079d5e-83a4-4c12-9100-63b573c5dd6b",
                            HardwareLayoutTemplateId = "f29cf67c-9a2c-47c8-9f72-eee55e6988d4",
                            Notes = ""
                        },
                        new
                        {
                            Id = "8e336999-b0e5-4245-89c3-57e7e63c9fb2",
                            CreatedByUserId = "d3ebdb0c-1884-4cde-ba8e-ade906609b99",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 13, 43, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "30079d5e-83a4-4c12-9100-63b573c5dd6b",
                            HardwareLayoutTemplateId = "7f30a163-7aec-47da-a87f-f6183a4745e3",
                            Notes = ""
                        },
                        new
                        {
                            Id = "110d5b05-3d43-4be6-a655-1e7f652ba66d",
                            CreatedByUserId = "d3ebdb0c-1884-4cde-ba8e-ade906609b99",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 13, 43, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "30079d5e-83a4-4c12-9100-63b573c5dd6b",
                            HardwareLayoutTemplateId = "b943d0eb-4807-46ab-9025-f0c73147468e",
                            Notes = ""
                        },
                        new
                        {
                            Id = "479c9ba5-bacc-47e6-acb1-4488f01926aa",
                            CreatedByUserId = "d3ebdb0c-1884-4cde-ba8e-ade906609b99",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 13, 43, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "30079d5e-83a4-4c12-9100-63b573c5dd6b",
                            HardwareLayoutTemplateId = "851c2fbd-39c8-4a75-b401-92d61a4347b4",
                            Notes = ""
                        },
                        new
                        {
                            Id = "67ae432b-3390-4acf-b724-83ec60d3b834",
                            CreatedByUserId = "f93b6937-dc27-4f8a-9d9b-5cc23c7d449d",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 15, 22, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "68889378-4756-46a4-90c3-0ca178109a24",
                            HardwareLayoutTemplateId = "f29cf67c-9a2c-47c8-9f72-eee55e6988d4",
                            Notes = ""
                        },
                        new
                        {
                            Id = "cf1df671-224a-4e05-9558-99138988e988",
                            CreatedByUserId = "f93b6937-dc27-4f8a-9d9b-5cc23c7d449d",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 15, 22, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "68889378-4756-46a4-90c3-0ca178109a24",
                            HardwareLayoutTemplateId = "7f30a163-7aec-47da-a87f-f6183a4745e3",
                            Notes = ""
                        },
                        new
                        {
                            Id = "6fca1bc2-cac4-403a-802a-15d5447682ee",
                            CreatedByUserId = "f93b6937-dc27-4f8a-9d9b-5cc23c7d449d",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 15, 22, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "68889378-4756-46a4-90c3-0ca178109a24",
                            HardwareLayoutTemplateId = "b943d0eb-4807-46ab-9025-f0c73147468e",
                            Notes = ""
                        },
                        new
                        {
                            Id = "ca187d2b-2b4e-4027-9b21-f9ad6849cad4",
                            CreatedByUserId = "f93b6937-dc27-4f8a-9d9b-5cc23c7d449d",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 15, 22, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "68889378-4756-46a4-90c3-0ca178109a24",
                            HardwareLayoutTemplateId = "851c2fbd-39c8-4a75-b401-92d61a4347b4",
                            Notes = ""
                        });
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareAudit", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("ActualCompletionDate")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AssignedUserId");

                    b.Property<string>("AuditPersonRoleLookupId");

                    b.Property<string>("CompletedByUserId");

                    b.Property<string>("CreatedByUserId");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpectedCompletionDate")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HardwareInventoryId");

                    b.Property<string>("Notes");

                    b.HasKey("Id");

                    b.HasIndex("AssignedUserId");

                    b.HasIndex("AuditPersonRoleLookupId");

                    b.HasIndex("CompletedByUserId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("HardwareInventoryId");

                    b.ToTable("HardwareAudits");

                    b.HasData(
                        new
                        {
                            Id = "8b9c9347-3189-43c8-9b7f-14d64dd19590",
                            ActualCompletionDate = new DateTime(2018, 12, 23, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(5930),
                            AssignedUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            AuditPersonRoleLookupId = "315929ad-1aaa-49f7-8499-e0f6e53b58d9",
                            CompletedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2018, 12, 20, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(4834),
                            ExpectedCompletionDate = new DateTime(2019, 1, 20, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(6558),
                            HardwareInventoryId = "9a378792-3a2f-4682-ac17-17c798b9681d",
                            Notes = "Fan making funny noise"
                        },
                        new
                        {
                            Id = "c4c9cbca-49a5-4083-8b55-02fbed2edff2",
                            ActualCompletionDate = new DateTime(2018, 12, 23, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(8052),
                            AssignedUserId = "e194001e-6302-4b2b-9ccf-cb1ba8cc9ea4",
                            AuditPersonRoleLookupId = "fa9f1d43-87bb-4406-a3ca-280ea0e21909",
                            CompletedByUserId = "e194001e-6302-4b2b-9ccf-cb1ba8cc9ea4",
                            CreatedOn = new DateTime(2018, 12, 20, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(8031),
                            ExpectedCompletionDate = new DateTime(2019, 1, 20, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(8056),
                            HardwareInventoryId = "9c8c0a85-4a31-4552-b8da-fd1114849829",
                            Notes = ""
                        },
                        new
                        {
                            Id = "e3dda6f9-537e-4ce5-b71d-4847b55293fe",
                            AssignedUserId = "d3ebdb0c-1884-4cde-ba8e-ade906609b99",
                            AuditPersonRoleLookupId = "315929ad-1aaa-49f7-8499-e0f6e53b58d9",
                            CreatedOn = new DateTime(2019, 2, 20, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(8072),
                            ExpectedCompletionDate = new DateTime(2019, 3, 20, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(8077),
                            HardwareInventoryId = "30079d5e-83a4-4c12-9100-63b573c5dd6b",
                            Notes = ""
                        },
                        new
                        {
                            Id = "993cd2f2-d503-4d2c-85ae-85d7a9a8c464",
                            ActualCompletionDate = new DateTime(2018, 4, 23, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(8085),
                            AssignedUserId = "d3ebdb0c-1884-4cde-ba8e-ade906609b99",
                            AuditPersonRoleLookupId = "315929ad-1aaa-49f7-8499-e0f6e53b58d9",
                            CompletedByUserId = "d3ebdb0c-1884-4cde-ba8e-ade906609b99",
                            CreatedOn = new DateTime(2018, 4, 20, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(8085),
                            ExpectedCompletionDate = new DateTime(2018, 5, 20, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(8089),
                            HardwareInventoryId = "30079d5e-83a4-4c12-9100-63b573c5dd6b",
                            Notes = ""
                        },
                        new
                        {
                            Id = "dda5fd7e-0e7f-418f-9a06-f5bf6a92634b",
                            ActualCompletionDate = new DateTime(2018, 4, 24, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(8101),
                            AssignedUserId = "f93b6937-dc27-4f8a-9d9b-5cc23c7d449d",
                            AuditPersonRoleLookupId = "ba42df51-8a45-42d1-abbf-f4697596d4ac",
                            CompletedByUserId = "f93b6937-dc27-4f8a-9d9b-5cc23c7d449d",
                            CreatedOn = new DateTime(2018, 4, 20, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(8097),
                            ExpectedCompletionDate = new DateTime(2018, 5, 20, 13, 11, 16, 194, DateTimeKind.Local).AddTicks(8101),
                            HardwareInventoryId = "68889378-4756-46a4-90c3-0ca178109a24",
                            Notes = ""
                        });
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareInventory", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AssignedUserId");

                    b.Property<string>("CreatedByUserId");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DatePurchased");

                    b.Property<string>("DisposedLookupId");

                    b.Property<DateTime?>("FutureReplacementDate");

                    b.Property<string>("HardwareLayoutId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ItemConditionId");

                    b.Property<string>("ItemConditionLookupId");

                    b.Property<string>("LocationDetails");

                    b.Property<string>("LocationId");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<string>("ShortId");

                    b.Property<string>("VendorId");

                    b.Property<DateTime?>("WarrantyExpiration");

                    b.Property<string>("WarrantyNotes");

                    b.HasKey("Id");

                    b.HasIndex("AssignedUserId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DisposedLookupId");

                    b.HasIndex("HardwareLayoutId");

                    b.HasIndex("ItemConditionId");

                    b.HasIndex("LocationId");

                    b.HasIndex("VendorId");

                    b.ToTable("HardwareInventories");

                    b.HasData(
                        new
                        {
                            Id = "9a378792-3a2f-4682-ac17-17c798b9681d",
                            AssignedUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 10, 10, 0, DateTimeKind.Unspecified),
                            DatePurchased = new DateTime(2016, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FutureReplacementDate = new DateTime(2019, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareLayoutId = "c7cfb168-e8b9-4b31-a5b8-504fb77cd449",
                            IsDeleted = false,
                            ItemConditionLookupId = "3487407e-ea58-47b4-ba2a-e3642ccfd4f4",
                            LocationDetails = "On Kennys desk",
                            LocationId = "721ee439-8040-4b3e-b047-6b44b1057e73",
                            Name = "Developer machine",
                            Notes = "",
                            ShortId = "EI-HKV-HG9-GG3",
                            VendorId = "0541cd81-b043-4b65-900c-812dcad5692e",
                            WarrantyExpiration = new DateTime(2018, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WarrantyNotes = "Call 1-888-541-9284 for tech support; Call 1-877-483-1139 for warranty stuff"
                        },
                        new
                        {
                            Id = "9c8c0a85-4a31-4552-b8da-fd1114849829",
                            AssignedUserId = "e194001e-6302-4b2b-9ccf-cb1ba8cc9ea4",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 11, 13, 0, DateTimeKind.Unspecified),
                            DatePurchased = new DateTime(2016, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareLayoutId = "c7cfb168-e8b9-4b31-a5b8-504fb77cd449",
                            IsDeleted = false,
                            ItemConditionLookupId = "3487407e-ea58-47b4-ba2a-e3642ccfd4f4",
                            LocationDetails = "On Doug's desk",
                            LocationId = "721ee439-8040-4b3e-b047-6b44b1057e73",
                            Name = "",
                            Notes = "",
                            ShortId = "EI-QFR-T7A-X37",
                            VendorId = "0541cd81-b043-4b65-900c-812dcad5692e",
                            WarrantyExpiration = new DateTime(2018, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WarrantyNotes = "Call 1-877-555-1111, Extension 5, Previous tech code 815A3"
                        },
                        new
                        {
                            Id = "30079d5e-83a4-4c12-9100-63b573c5dd6b",
                            AssignedUserId = "d3ebdb0c-1884-4cde-ba8e-ade906609b99",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 13, 43, 0, DateTimeKind.Unspecified),
                            DatePurchased = new DateTime(2016, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareLayoutId = "c7cfb168-e8b9-4b31-a5b8-504fb77cd449",
                            IsDeleted = false,
                            ItemConditionLookupId = "16719bae-4ed1-492e-8d85-0ce7332e088d",
                            LocationDetails = "",
                            LocationId = "721ee439-8040-4b3e-b047-6b44b1057e73",
                            Name = "",
                            Notes = "",
                            ShortId = "EI-M48-GM4-T34",
                            VendorId = "0541cd81-b043-4b65-900c-812dcad5692e",
                            WarrantyExpiration = new DateTime(2018, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WarrantyNotes = "Call 1-877-555-1111, Extension 5, Previous tech code 815A3"
                        },
                        new
                        {
                            Id = "68889378-4756-46a4-90c3-0ca178109a24",
                            AssignedUserId = "f93b6937-dc27-4f8a-9d9b-5cc23c7d449d",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 15, 22, 0, DateTimeKind.Unspecified),
                            DatePurchased = new DateTime(2016, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareLayoutId = "c7cfb168-e8b9-4b31-a5b8-504fb77cd449",
                            IsDeleted = false,
                            ItemConditionLookupId = "3487407e-ea58-47b4-ba2a-e3642ccfd4f4",
                            LocationDetails = "",
                            LocationId = "721ee439-8040-4b3e-b047-6b44b1057e73",
                            Name = "",
                            Notes = "",
                            ShortId = "EI-9X4-69Y-66C",
                            VendorId = "0541cd81-b043-4b65-900c-812dcad5692e",
                            WarrantyNotes = "Call 1-877-555-1111, Extension 5, Previous tech code 815A3"
                        });
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareInventoryAssignmentHistory", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AssignedBy_UserId");

                    b.Property<string>("AssignedTo_UserId");

                    b.Property<string>("CreatedByUserId");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HardwareInventoryId");

                    b.Property<string>("Notes");

                    b.HasKey("Id");

                    b.HasIndex("AssignedBy_UserId");

                    b.HasIndex("AssignedTo_UserId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("HardwareInventoryId");

                    b.ToTable("HardwareInventoryAssignmentHistories");

                    b.HasData(
                        new
                        {
                            Id = "201b1b65-5ccd-4360-92c5-aab3fdc88e5a",
                            AssignedBy_UserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            AssignedTo_UserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 10, 10, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "9a378792-3a2f-4682-ac17-17c798b9681d",
                            Notes = "Initial designation."
                        },
                        new
                        {
                            Id = "3e2c865f-90d3-4f0c-969d-f804c2b6c16a",
                            AssignedBy_UserId = "e194001e-6302-4b2b-9ccf-cb1ba8cc9ea4",
                            AssignedTo_UserId = "e194001e-6302-4b2b-9ccf-cb1ba8cc9ea4",
                            CreatedByUserId = "e194001e-6302-4b2b-9ccf-cb1ba8cc9ea4",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 11, 13, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "9c8c0a85-4a31-4552-b8da-fd1114849829",
                            Notes = "Initial designation."
                        },
                        new
                        {
                            Id = "468e5c12-9d4d-40d1-b31d-71a92cd39736",
                            AssignedBy_UserId = "d3ebdb0c-1884-4cde-ba8e-ade906609b99",
                            AssignedTo_UserId = "d3ebdb0c-1884-4cde-ba8e-ade906609b99",
                            CreatedByUserId = "d3ebdb0c-1884-4cde-ba8e-ade906609b99",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 13, 43, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "30079d5e-83a4-4c12-9100-63b573c5dd6b",
                            Notes = "Initial designation."
                        },
                        new
                        {
                            Id = "1a35c031-489b-4773-b08a-b270035d20d5",
                            AssignedBy_UserId = "f93b6937-dc27-4f8a-9d9b-5cc23c7d449d",
                            AssignedTo_UserId = "f93b6937-dc27-4f8a-9d9b-5cc23c7d449d",
                            CreatedByUserId = "f93b6937-dc27-4f8a-9d9b-5cc23c7d449d",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 15, 22, 0, DateTimeKind.Unspecified),
                            HardwareInventoryId = "68889378-4756-46a4-90c3-0ca178109a24",
                            Notes = "Initial designation."
                        });
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareLayout", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedByUserId");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("HardwareLayouts");

                    b.HasData(
                        new
                        {
                            Id = "c7cfb168-e8b9-4b31-a5b8-504fb77cd449",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 8, 43, 0, DateTimeKind.Unspecified),
                            IsDelete = false,
                            Name = "Dell XPS 150",
                            Notes = ""
                        });
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareLayoutTemplate", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedByUserId");

                    b.Property<string>("Datatype_LookupId");

                    b.Property<string>("HardwareLayoutId");

                    b.Property<string>("HardwareLayoutTemplate_LookupId");

                    b.Property<string>("HardwareLayoutTemplate_TypeLookupId");

                    b.Property<int>("OrderIndex");

                    b.Property<string>("PropertyValue");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("Datatype_LookupId");

                    b.HasIndex("HardwareLayoutId");

                    b.HasIndex("HardwareLayoutTemplate_LookupId");

                    b.ToTable("HardwareLayoutTemplates");

                    b.HasData(
                        new
                        {
                            Id = "f29cf67c-9a2c-47c8-9f72-eee55e6988d4",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            Datatype_LookupId = "2495bce9-8632-4681-9a10-5ea00f9eeb37",
                            HardwareLayoutId = "c7cfb168-e8b9-4b31-a5b8-504fb77cd449",
                            HardwareLayoutTemplate_TypeLookupId = "2e7d8395-6638-4fad-9103-09d05c901354",
                            OrderIndex = 1,
                            PropertyValue = "Dell"
                        },
                        new
                        {
                            Id = "b943d0eb-4807-46ab-9025-f0c73147468e",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            Datatype_LookupId = "7453eab1-8609-42cd-9460-b469c83c1e6a",
                            HardwareLayoutId = "c7cfb168-e8b9-4b31-a5b8-504fb77cd449",
                            HardwareLayoutTemplate_TypeLookupId = "0f7feb72-c67b-4ad1-a536-328a36c0a864",
                            OrderIndex = 4,
                            PropertyValue = "8"
                        },
                        new
                        {
                            Id = "7f30a163-7aec-47da-a87f-f6183a4745e3",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            Datatype_LookupId = "2495bce9-8632-4681-9a10-5ea00f9eeb37",
                            HardwareLayoutId = "c7cfb168-e8b9-4b31-a5b8-504fb77cd449",
                            HardwareLayoutTemplate_TypeLookupId = "2e7d8395-6638-4fad-9103-09d05c901354",
                            OrderIndex = 2,
                            PropertyValue = "XPS 150"
                        },
                        new
                        {
                            Id = "851c2fbd-39c8-4a75-b401-92d61a4347b4",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            Datatype_LookupId = "5f8ab34b-e60d-4e5a-bd5c-83f4b268812a",
                            HardwareLayoutId = "c7cfb168-e8b9-4b31-a5b8-504fb77cd449",
                            HardwareLayoutTemplate_TypeLookupId = "db3b0c57-2231-4b8f-9d95-1c7f6ee21cf8",
                            OrderIndex = 3,
                            PropertyValue = "678.93"
                        });
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.Location", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Abbreviation");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("CreatedByUserId");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FaxNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LocationName");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("State");

                    b.Property<string>("Street1");

                    b.Property<string>("Street2");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = "721ee439-8040-4b3e-b047-6b44b1057e73",
                            Abbreviation = "BMT",
                            City = "Beaumont",
                            Country = "US",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2017, 1, 22, 11, 0, 13, 0, DateTimeKind.Unspecified),
                            FaxNumber = "1-888-111-1111",
                            IsDeleted = false,
                            LocationName = "Beamont Office",
                            PhoneNumber = "409-444-1111",
                            State = "TX",
                            Street1 = "103 Bird Street",
                            Street2 = "",
                            Zip = "77701"
                        });
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.Lookup", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LookupName");

                    b.Property<string>("LookupType");

                    b.HasKey("Id");

                    b.ToTable("Lookups");

                    b.HasData(
                        new
                        {
                            Id = "fa9f1d43-87bb-4406-a3ca-280ea0e21909",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(2015),
                            LookupName = "Supervisor",
                            LookupType = "AuditPersonRole"
                        },
                        new
                        {
                            Id = "315929ad-1aaa-49f7-8499-e0f6e53b58d9",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4212),
                            LookupName = "Tech",
                            LookupType = "AuditPersonRole"
                        },
                        new
                        {
                            Id = "ba42df51-8a45-42d1-abbf-f4697596d4ac",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4240),
                            LookupName = "User",
                            LookupType = "AuditPersonRole"
                        },
                        new
                        {
                            Id = "e3e6af98-265b-4ebc-a290-60d65d50dd00",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4244),
                            LookupName = "Invoice",
                            LookupType = "BinaryDatatype"
                        },
                        new
                        {
                            Id = "89fbc095-3965-4818-a221-4863c33699d9",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4249),
                            LookupName = "License",
                            LookupType = "BinaryDatatype"
                        },
                        new
                        {
                            Id = "18207c02-ca41-402d-95bb-a09d107a1795",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4314),
                            LookupName = "Picture",
                            LookupType = "BinaryDatatype"
                        },
                        new
                        {
                            Id = "d9c5c265-a220-4ca3-abbe-65b71d104704",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4253),
                            LookupName = "Other",
                            LookupType = "BinaryDatatype"
                        },
                        new
                        {
                            Id = "5f4aaee8-c55c-4d13-9ba2-f4a10ba66da1",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4322),
                            LookupName = "Capacity MB",
                            LookupType = "Datatype"
                        },
                        new
                        {
                            Id = "7453eab1-8609-42cd-9460-b469c83c1e6a",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4318),
                            LookupName = "Capacity GB",
                            LookupType = "Datatype"
                        },
                        new
                        {
                            Id = "b4be67cd-6e01-4caa-be04-c01971a27988",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4327),
                            LookupName = "Capacity TB",
                            LookupType = "Datatype"
                        },
                        new
                        {
                            Id = "5f8ab34b-e60d-4e5a-bd5c-83f4b268812a",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4331),
                            LookupName = "Currency",
                            LookupType = "Datatype"
                        },
                        new
                        {
                            Id = "7c145e98-5528-47e6-b385-e56cb906f69e",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4335),
                            LookupName = "Integer",
                            LookupType = "Datatype"
                        },
                        new
                        {
                            Id = "b1c86a47-1e49-4f83-935a-5e9ac39059a0",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4339),
                            LookupName = "Real",
                            LookupType = "Datatype"
                        },
                        new
                        {
                            Id = "2495bce9-8632-4681-9a10-5ea00f9eeb37",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4343),
                            LookupName = "String",
                            LookupType = "Datatype"
                        },
                        new
                        {
                            Id = "d03b0c23-e14e-4afb-b565-adbe0f3da51c",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4351),
                            LookupName = "Destroyed",
                            LookupType = "DisposalMethod"
                        },
                        new
                        {
                            Id = "987ffdc8-f90d-46bf-a0ac-4b09784852b7",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4351),
                            LookupName = "Donated",
                            LookupType = "DisposalMethod"
                        },
                        new
                        {
                            Id = "db3475df-4cde-41ad-ab1e-6081d4e7a105",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4355),
                            LookupName = "Sold",
                            LookupType = "DisposalMethod"
                        },
                        new
                        {
                            Id = "659aec90-c918-49b5-b626-85a58a4255c4",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4400),
                            LookupName = "New",
                            LookupType = "ItemCondition"
                        },
                        new
                        {
                            Id = "3487407e-ea58-47b4-ba2a-e3642ccfd4f4",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4396),
                            LookupName = "Good",
                            LookupType = "ItemCondition"
                        },
                        new
                        {
                            Id = "16719bae-4ed1-492e-8d85-0ce7332e088d",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4405),
                            LookupName = "Poor",
                            LookupType = "ItemCondition"
                        },
                        new
                        {
                            Id = "05cececd-9719-4a9a-bf51-2e15f31faa5b",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4409),
                            LookupName = "Possibly Broken",
                            LookupType = "ItemCondition"
                        },
                        new
                        {
                            Id = "01153d43-6f74-49e2-a191-88ed5237df96",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4392),
                            LookupName = "Broke",
                            LookupType = "ItemCondition"
                        },
                        new
                        {
                            Id = "d07801e2-981b-4163-9dd6-79483ae63628",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4417),
                            LookupName = "Unknown",
                            LookupType = "ItemCondition"
                        },
                        new
                        {
                            Id = "107ca0c2-fe5c-49e5-909c-4fb0d4f6e915",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4359),
                            LookupName = "Graphics Card",
                            LookupType = "HardwareTemplateLayout"
                        },
                        new
                        {
                            Id = "2e7d8395-6638-4fad-9103-09d05c901354",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4364),
                            LookupName = "Make",
                            LookupType = "HardwareTemplateLayout"
                        },
                        new
                        {
                            Id = "0f7feb72-c67b-4ad1-a536-328a36c0a864",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4368),
                            LookupName = "Memory",
                            LookupType = "HardwareTemplateLayout"
                        },
                        new
                        {
                            Id = "212f7b7e-df8f-424b-8ca4-a4ace16ae831",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4372),
                            LookupName = "Model",
                            LookupType = "HardwareTemplateLayout"
                        },
                        new
                        {
                            Id = "db3b0c57-2231-4b8f-9d95-1c7f6ee21cf8",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4376),
                            LookupName = "Price",
                            LookupType = "HardwareTemplateLayout"
                        },
                        new
                        {
                            Id = "ac3d39cb-ca09-4716-a57c-210c26828d16",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4384),
                            LookupName = "Processor",
                            LookupType = "HardwareTemplateLayout"
                        },
                        new
                        {
                            Id = "fc77a71a-77f5-4a01-80e8-fb54d47a883f",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4388),
                            LookupName = "Serial Number",
                            LookupType = "HardwareTemplateLayout"
                        },
                        new
                        {
                            Id = "9147c301-271c-4faf-bb36-cd44cf54b5dc",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4388),
                            LookupName = "Storage Capacity",
                            LookupType = "HardwareTemplateLayout"
                        },
                        new
                        {
                            Id = "ef13987e-7276-4961-9008-bbed538382d5",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4421),
                            LookupName = "Hardware",
                            LookupType = "TemplateType"
                        },
                        new
                        {
                            Id = "02ec251c-d9d7-4438-9a01-c970dee721c4",
                            CreatedOn = new DateTime(2019, 4, 20, 18, 11, 16, 164, DateTimeKind.Utc).AddTicks(4425),
                            LookupName = "Software",
                            LookupType = "TemplateType"
                        });
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.Vendor", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("CreatedByUserId");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FaxNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("State");

                    b.Property<string>("Street1");

                    b.Property<string>("Street2");

                    b.Property<string>("TechSupportNumber");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            Id = "0541cd81-b043-4b65-900c-812dcad5692e",
                            City = "Dallas",
                            Country = "US",
                            CreatedByUserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 5, 13, 0, DateTimeKind.Unspecified),
                            Email = "support@dell.com",
                            FaxNumber = "866-444-5454",
                            IsDeleted = false,
                            Name = "Dell",
                            Notes = "Extension 5310 then press 9",
                            PhoneNumber = "855-393-2299",
                            State = "TX",
                            Street1 = "521 West End Blvd",
                            Street2 = "",
                            TechSupportNumber = "800-630-2910",
                            Zip = "77618"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.
                ", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUserRole<string>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.ApplicationRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.HasDiscriminator().HasValue("ApplicationRole");

                    b.HasData(
                        new
                        {
                            Id = "6d68a30e-caec-45d4-9df7-126478e0fa04",
                            ConcurrencyStamp = "47470259-3638-40bd-a792-e8412e731973",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "d6b28bd3-fffe-4762-bc37-1a63c6d06780",
                            ConcurrencyStamp = "dcbd10bb-f7be-48d7-b72c-53a2ff9c2037",
                            Name = "Superviser",
                            NormalizedName = "SUPERVISER"
                        },
                        new
                        {
                            Id = "0416334c-8efe-4fb5-ad4f-7fd69744c228",
                            ConcurrencyStamp = "35c92392-ac2c-48f2-8f8a-0c46aa554b91",
                            Name = "Tech",
                            NormalizedName = "TECH"
                        },
                        new
                        {
                            Id = "6b30374c-4005-4021-8e4b-b64e53e68a80",
                            ConcurrencyStamp = "265ca2a8-35a7-4ea0-a7b1-ffad4440d9a2",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("ActiveDirectoryGuid");

                    b.Property<string>("ActiveDirectoryUserName");

                    b.Property<string>("CreatedByUserId");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsDisabled");

                    b.Property<string>("LastName");

                    b.HasIndex("CreatedByUserId");

                    b.HasDiscriminator().HasValue("ApplicationUser");

                    b.HasData(
                        new
                        {
                            Id = "4b64005b-9d67-42f6-aef0-048353afa97b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "34a0a758-284a-466c-8b39-21e5dd7ca558",
                            Email = "admin@admin.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "ADMIN@ADMIN.COM",
                            NormalizedUserName = "ADMIN@ADMIN.COM",
                            PasswordHash = "AL5PHq/vBbl6WqfobaAhPtD0syEXqMTSeIfkaFypqY7gsvPJtN/8LQtTAYXYd1W0Aw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "43240c97-92f1-4e42-bf3d-18dad82d72d6",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com",
                            CreatedOn = new DateTime(2017, 1, 22, 11, 30, 6, 0, DateTimeKind.Unspecified),
                            FirstName = "Admin",
                            IsDeleted = false,
                            IsDisabled = true,
                            LastName = "Admin"
                        },
                        new
                        {
                            Id = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1fe477a6-5f7a-4e00-a0be-b757f5faa15b",
                            Email = "kmann@etherpunk.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "KMANN@ETHERPUNK.COM",
                            NormalizedUserName = "KMANN@ETHERPUNK.COM",
                            PasswordHash = "AJNuTsVXgy2chiVmzrylHLd++cSuswwEX+V6cOMpy+icvUm95QQqi10bQEsnuLdJew==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "028f4cc5-a288-40e5-a7be-1f0aca1cc96c",
                            TwoFactorEnabled = false,
                            UserName = "kmann@etherpunk.com",
                            CreatedOn = new DateTime(2017, 1, 22, 11, 0, 13, 0, DateTimeKind.Unspecified),
                            FirstName = "Kenny",
                            IsDeleted = false,
                            IsDisabled = false,
                            LastName = "Mann"
                        },
                        new
                        {
                            Id = "e194001e-6302-4b2b-9ccf-cb1ba8cc9ea4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "194318a3-ad83-48b5-adca-d21c5cb8ff63",
                            Email = "dbrooks@etherpunk.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "DBROOKS@ETHERPUNK.COM",
                            NormalizedUserName = "DBROOKS@ETHERPUNK.COM",
                            PasswordHash = "AD/EPYONfj3zLIHo7MEMXHPhbb7TDHByylvW8aslrsvlpxuCF3mYuG7HfynnNs0dQA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "54acf05d-c73e-4681-b1f3-b80ba5f5253a",
                            TwoFactorEnabled = false,
                            UserName = "dbrooks@etherpunk.com",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 0, 14, 0, DateTimeKind.Unspecified),
                            FirstName = "Doug",
                            IsDeleted = false,
                            IsDisabled = false,
                            LastName = "Brooks"
                        },
                        new
                        {
                            Id = "d3ebdb0c-1884-4cde-ba8e-ade906609b99",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "53c0fecf-f3fa-4cd5-b169-2e23ed170de9",
                            Email = "njean@etherpunk.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "NJEAN@ETHERPUNK.COM",
                            NormalizedUserName = "NJEAN@ETHERPUNK.COM",
                            PasswordHash = "AGB39Wc/i/rUWUoOA2ae9ZLNzWyhIHAg1gv+5Kh4VJCJIlESxHiWeBcmWXrqT9eq9Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3cb233eb-a3be-4c93-a4c2-e4a172d2a9b0",
                            TwoFactorEnabled = false,
                            UserName = "njean@etherpunk.com",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 0, 15, 0, DateTimeKind.Unspecified),
                            FirstName = "Norma",
                            IsDeleted = false,
                            IsDisabled = false,
                            LastName = "Jean"
                        },
                        new
                        {
                            Id = "f93b6937-dc27-4f8a-9d9b-5cc23c7d449d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "445cec71-e87c-4341-aca3-42618b8bd4f9",
                            Email = "ssmith@etherpunk.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "SSMITH@ETHERPUNK.COM",
                            NormalizedUserName = "SSMITH@ETHERPUNK.COM",
                            PasswordHash = "AFrjW+/HbD+0BVMnxzcWU3sO/su/IYGvf2EkqyVHLS6mFt1MUpNSAkr44qeluqtufg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1a4d4925-6b0e-4b7d-98ed-cf1ff9fd0f1b",
                            TwoFactorEnabled = false,
                            UserName = "ssmith@etherpunk.com",
                            CreatedOn = new DateTime(2017, 1, 22, 12, 0, 16, 0, DateTimeKind.Unspecified),
                            FirstName = "Stephanie",
                            IsDeleted = false,
                            IsDisabled = false,
                            LastName = "Smith"
                        });
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.ApplicationUserRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>");

                    b.Property<string>("ApplicationRoleId");

                    b.Property<string>("ApplicationUserId");

                    b.HasIndex("ApplicationRoleId");

                    b.HasIndex("ApplicationUserId");

                    b.HasDiscriminator().HasValue("ApplicationUserRole");

                    b.HasData(
                        new
                        {
                            UserId = "4b64005b-9d67-42f6-aef0-048353afa97b",
                            RoleId = "6d68a30e-caec-45d4-9df7-126478e0fa04"
                        },
                        new
                        {
                            UserId = "9fa7c39d-a4c7-4c7c-9986-b48644c309af",
                            RoleId = "0416334c-8efe-4fb5-ad4f-7fd69744c228"
                        },
                        new
                        {
                            UserId = "e194001e-6302-4b2b-9ccf-cb1ba8cc9ea4",
                            RoleId = "d6b28bd3-fffe-4762-bc37-1a63c6d06780"
                        },
                        new
                        {
                            UserId = "d3ebdb0c-1884-4cde-ba8e-ade906609b99",
                            RoleId = "0416334c-8efe-4fb5-ad4f-7fd69744c228"
                        },
                        new
                        {
                            UserId = "f93b6937-dc27-4f8a-9d9b-5cc23c7d449d",
                            RoleId = "6b30374c-4005-4021-8e4b-b64e53e68a80"
                        });
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareAttachment", b =>
                {
                    b.HasOne("EtherpunkManagementSystems.Data.Lookup", "AttachmentType")
                        .WithMany()
                        .HasForeignKey("AttachmentTypeId");

                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("EtherpunkManagementSystems.Data.HardwareInventory", "HardwareInventory")
                        .WithMany("Attachments")
                        .HasForeignKey("HardwareInventoryId");
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareAttribute", b =>
                {
                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("EtherpunkManagementSystems.Data.HardwareInventory", "HardwareInventory")
                        .WithMany("HardwareAttributes")
                        .HasForeignKey("HardwareInventoryId");

                    b.HasOne("EtherpunkManagementSystems.Data.HardwareLayoutTemplate", "HardwareLayoutTemplate")
                        .WithMany()
                        .HasForeignKey("HardwareLayoutTemplateId");
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareAudit", b =>
                {
                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "AssignedUser")
                        .WithMany()
                        .HasForeignKey("AssignedUserId");

                    b.HasOne("EtherpunkManagementSystems.Data.Lookup", "AuditPersonRoleLookup")
                        .WithMany()
                        .HasForeignKey("AuditPersonRoleLookupId");

                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "CompletedByUser")
                        .WithMany()
                        .HasForeignKey("CompletedByUserId");

                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("EtherpunkManagementSystems.Data.HardwareInventory", "HardwareInventory")
                        .WithMany()
                        .HasForeignKey("HardwareInventoryId");
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareInventory", b =>
                {
                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "AssignedUser")
                        .WithMany()
                        .HasForeignKey("AssignedUserId");

                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("EtherpunkManagementSystems.Data.Lookup", "DisposedLookup")
                        .WithMany()
                        .HasForeignKey("DisposedLookupId");

                    b.HasOne("EtherpunkManagementSystems.Data.HardwareLayout", "HardwareLayout")
                        .WithMany()
                        .HasForeignKey("HardwareLayoutId");

                    b.HasOne("EtherpunkManagementSystems.Data.Lookup", "ItemCondition")
                        .WithMany()
                        .HasForeignKey("ItemConditionId");

                    b.HasOne("EtherpunkManagementSystems.Data.Location")
                        .WithMany("HardwareInventories")
                        .HasForeignKey("LocationId");

                    b.HasOne("EtherpunkManagementSystems.Data.Vendor", "Vendor")
                        .WithMany("HardwareInventories")
                        .HasForeignKey("VendorId");
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareInventoryAssignmentHistory", b =>
                {
                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "AssignedBy_User")
                        .WithMany()
                        .HasForeignKey("AssignedBy_UserId");

                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "AssignedTo_User")
                        .WithMany()
                        .HasForeignKey("AssignedTo_UserId");

                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("EtherpunkManagementSystems.Data.HardwareInventory", "HardwareInventory")
                        .WithMany()
                        .HasForeignKey("HardwareInventoryId");
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareLayout", b =>
                {
                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.HardwareLayoutTemplate", b =>
                {
                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("EtherpunkManagementSystems.Data.Lookup", "DataType_Lookup")
                        .WithMany()
                        .HasForeignKey("Datatype_LookupId");

                    b.HasOne("EtherpunkManagementSystems.Data.HardwareLayout", "HardwareLayout")
                        .WithMany()
                        .HasForeignKey("HardwareLayoutId");

                    b.HasOne("EtherpunkManagementSystems.Data.Lookup", "HardwareLayoutTemplate_Lookup")
                        .WithMany()
                        .HasForeignKey("HardwareLayoutTemplate_LookupId");
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.Location", b =>
                {
                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.Vendor", b =>
                {
                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.ApplicationUser", b =>
                {
                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");
                });

            modelBuilder.Entity("EtherpunkManagementSystems.Data.ApplicationUserRole", b =>
                {
                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationRole")
                        .WithMany("UserRoles")
                        .HasForeignKey("ApplicationRoleId");

                    b.HasOne("EtherpunkManagementSystems.Data.ApplicationUser")
                        .WithMany("UserRoles")
                        .HasForeignKey("ApplicationUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
